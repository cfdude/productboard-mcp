name: Code Quality

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Check TypeScript types
      run: npx tsc --noEmit
    
    - name: Check code formatting with Prettier
      run: |
        npx prettier --check "src/**/*.ts" "scripts/**/*.ts" "*.json" "*.md" || {
          echo "Code formatting issues found. Run 'npx prettier --write .' to fix."
          exit 1
        }
    
    - name: Lint TypeScript files
      run: |
        # Run ESLint with current project configuration (warnings allowed)
        npx eslint src --ext .ts --max-warnings=1000
    
    - name: Check for common issues
      run: |
        # Check for console.log statements (should use proper logging)
        if grep -r "console\.log" src/ --include="*.ts" --exclude-dir=node_modules; then
          echo "Found console.log statements. Use proper logging instead."
          exit 1
        fi
        
        # Check for TODO/FIXME comments
        if grep -r "TODO\|FIXME" src/ --include="*.ts" --exclude-dir=node_modules; then
          echo "Found TODO/FIXME comments. Please address before merging."
          exit 1
        fi
        
        # Check for any .only in test files (if any)
        if find src -name "*.test.ts" -o -name "*.spec.ts" | xargs grep -l "\.only(" 2>/dev/null; then
          echo "Found .only() in test files. Remove before merging."
          exit 1
        fi
        
        echo "Code quality checks passed!"
    
    - name: Check manifest is up to date
      run: |
        npm run generate-manifest
        # Check if there are changes other than the generated timestamp
        # Remove the timestamp line and check if files are identical
        cp generated/manifest.json /tmp/manifest-new.json
        git checkout generated/manifest.json
        cp generated/manifest.json /tmp/manifest-old.json
        
        # Remove timestamp lines and compare
        grep -v '"generated"' /tmp/manifest-old.json > /tmp/manifest-old-clean.json
        grep -v '"generated"' /tmp/manifest-new.json > /tmp/manifest-new-clean.json
        
        if ! diff -q /tmp/manifest-old-clean.json /tmp/manifest-new-clean.json > /dev/null; then
          echo "Manifest is out of date. Run 'npm run generate-manifest' and commit the changes."
          diff /tmp/manifest-old-clean.json /tmp/manifest-new-clean.json || true
          exit 1
        fi
        
        # Restore the newly generated file so git doesn't think it's modified
        cp /tmp/manifest-new.json generated/manifest.json
        echo "Manifest is up to date!"