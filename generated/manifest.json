{
  "version": "1.0.0",
  "generated": "2025-08-01T18:52:09.994Z",
  "categories": {
    "notes": {
      "displayName": "Notes",
      "description": "Customer feedback and notes management",
      "tools": ["create_note", "get_notes", "get_note", "update_note", "delete_note", "bulk_add_note_followers", "remove_note_follower", "list_tags", "create_note_tag", "delete_note_tag", "list_links", "create_link", "list_feedback_form_configurations", "get_feedback_form_configuration", "submit_feedback_form"]
    },
    "features": {
      "displayName": "Features",
      "description": "Product features, components, and products management",
      "tools": ["create_feature", "get_features", "get_feature", "update_feature", "delete_feature", "create_component", "get_components", "get_component", "update_component", "get_products", "get_product", "update_product"]
    },
    "companies": {
      "displayName": "Companies",
      "description": "Company and user management",
      "tools": ["create_company", "get_companies", "get_company", "update_company", "delete_company", "create_company_field", "list_company_fields", "get_company_field", "update_company_field", "delete_company_field", "get_company_field_value", "set_company_field_value", "delete_company_field_value", "get_users", "create_user", "get_user", "update_user", "delete_user"]
    },
    "webhooks": {
      "displayName": "Webhooks",
      "description": "Webhook subscription management",
      "tools": ["post_webhook", "get_webhooks", "get_webhook", "delete_webhook"]
    },
    "objectives": {
      "displayName": "Objectives",
      "description": "Strategic objectives, initiatives, and key results management",
      "tools": ["get_objectives", "create_objective", "get_objective", "update_objective", "delete_objective", "list_links_objective_to_features", "list_links_objective_to_initiatives", "create_objective_to_initiative_link", "delete_objective_to_initiative_link", "create_objective_to_feature_link", "delete_objective_to_feature_link", "get_initiatives", "create_initiative", "get_initiative", "update_initiative", "delete_initiative", "list_links_initiative_to_objectives", "list_links_initiative_to_features", "create_initiative_to_objective_link", "delete_initiative_to_objective_link", "create_initiative_to_feature_link", "delete_initiative_to_feature_link", "get_key_results", "create_key_result", "get_key_result", "update_key_result", "delete_key_result"]
    },
    "custom-fields": {
      "displayName": "Custom Fields",
      "description": "Custom field management for hierarchy entities",
      "tools": ["get_custom_fields", "get_custom_fields_values", "get_custom_field", "get_custom_field_value", "set_custom_field_value", "delete_custom_field_value", "get_feature_statuses"]
    },
    "releases": {
      "displayName": "Releases",
      "description": "Release and release group management",
      "tools": ["create_release_group", "list_release_groups", "get_release_group", "update_release_group", "delete_release_group", "create_release", "list_releases", "get_release", "update_release", "delete_release", "list_feature_release_assignments", "get_feature_release_assignment", "update_feature_release_assignment"]
    },
    "plugin-integrations": {
      "displayName": "Plugin Integrations",
      "description": "Plugin integration management",
      "tools": ["post_plugin_integration", "get_plugin_integrations", "get_plugin_integration", "patch_plugin_integration", "put_plugin_integration", "delete_plugin_integration", "get_plugin_integration_connections", "get_plugin_integration_connection", "put_plugin_integration_connection", "delete_plugin_integration_connection"]
    },
    "jira-integrations": {
      "displayName": "Jira Integrations",
      "description": "Jira integration management",
      "tools": ["get_jira_integration", "get_jira_integrations", "get_jira_integration_connection", "get_jira_integration_connections"]
    },
    "search": {
      "displayName": "Universal Search",
      "description": "Universal search across all Productboard entities",
      "tools": ["search"]
    },
    "performance": {
      "displayName": "Performance Tools",
      "description": "High-performance lightweight tools for status checking, validation, and monitoring",
      "tools": ["check_entity_status", "validate_entity_existence", "track_batch_progress", "get_entity_counts", "perform_health_check", "get_performance_stats", "perform_cleanup"]
    },
    "bulk-operations": {
      "displayName": "Bulk Operations",
      "description": "Efficient bulk update operations with change tracking and diff analysis",
      "tools": ["perform_bulk_update", "compare_entities", "validate_bulk_update"]
    },
    "context-aware": {
      "displayName": "Context-Aware Features",
      "description": "Intelligent response adaptation and user context management with personalization",
      "tools": ["set_user_context", "get_user_context", "adapt_response", "add_adaptation_rule", "clear_user_context", "get_context_stats"]
    }
  },
  "tools": {
    "create_note": {
      "category": "notes",
      "operation": "CREATE_NOTE",
      "description": "Create a new note in Productboard",
      "requiredParams": ["title", "content"],
      "optionalParams": ["ownerEmail", "userEmail", "userName", "userExternalId", "companyDomain", "sourceOrigin", "sourceRecordId", "displayUrl", "tags"],
      "implementation": "mcp"
    },
    "get_notes": {
      "category": "notes",
      "operation": "GET_NOTES",
      "description": "List all notes with filtering and pagination",
      "requiredParams": [],
      "optionalParams": ["limit", "startWith", "detail", "includeSubData", "allTags", "anyTag", "companyId", "createdFrom", "createdTo", "dateFrom", "dateTo", "featureId", "ownerEmail", "source", "term", "updatedFrom", "updatedTo"],
      "implementation": "mcp"
    },
    "get_note": {
      "category": "notes",
      "operation": "GET_NOTE",
      "description": "Get a specific note by ID",
      "requiredParams": ["id"],
      "optionalParams": ["detail", "includeSubData"],
      "implementation": "mcp"
    },
    "update_note": {
      "category": "notes",
      "operation": "UPDATE_NOTE",
      "description": "Update an existing note",
      "requiredParams": ["id"],
      "optionalParams": ["title", "content", "tags"],
      "implementation": "mcp"
    },
    "delete_note": {
      "category": "notes",
      "operation": "DELETE_NOTE",
      "description": "Delete a note",
      "requiredParams": ["id"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "bulk_add_note_followers": {
      "category": "notes",
      "operation": "BULK_ADD_NOTE_FOLLOWERS",
      "description": "Add followers to a note",
      "requiredParams": ["noteId"],
      "optionalParams": ["body"],
      "implementation": "mcp"
    },
    "remove_note_follower": {
      "category": "notes",
      "operation": "REMOVE_NOTE_FOLLOWER",
      "description": "Remove a follower from a note",
      "requiredParams": ["noteId", "email"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "list_tags": {
      "category": "notes",
      "operation": "LIST_TAGS",
      "description": "List tags",
      "requiredParams": ["noteId"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "create_note_tag": {
      "category": "notes",
      "operation": "CREATE_NOTE_TAG",
      "description": "Create a tag",
      "requiredParams": ["noteId", "tagName"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "delete_note_tag": {
      "category": "notes",
      "operation": "DELETE_NOTE_TAG",
      "description": "Remove a tag from a note",
      "requiredParams": ["noteId", "tagName"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "list_links": {
      "category": "notes",
      "operation": "LIST_LINKS",
      "description": "List links",
      "requiredParams": ["noteId"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "create_link": {
      "category": "notes",
      "operation": "CREATE_LINK",
      "description": "Create a link",
      "requiredParams": ["noteId", "entityId"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "list_feedback_form_configurations": {
      "category": "notes",
      "operation": "LIST_FEEDBACK_FORM_CONFIGURATIONS",
      "description": "List all feedback form configurations",
      "requiredParams": [],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "get_feedback_form_configuration": {
      "category": "notes",
      "operation": "GET_FEEDBACK_FORM_CONFIGURATION",
      "description": "Retrieve a feedback form configuration",
      "requiredParams": ["id"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "submit_feedback_form": {
      "category": "notes",
      "operation": "SUBMIT_FEEDBACK_FORM",
      "description": "Submit a feedback form",
      "requiredParams": [],
      "optionalParams": ["body"],
      "implementation": "mcp"
    },
    "create_feature": {
      "category": "features",
      "operation": "CREATE_FEATURE",
      "description": "Create a new feature in Productboard",
      "requiredParams": ["name"],
      "optionalParams": ["description", "status", "owner", "parent"],
      "implementation": "mcp"
    },
    "get_features": {
      "category": "features",
      "operation": "GET_FEATURES",
      "description": "List all features in Productboard",
      "requiredParams": [],
      "optionalParams": ["limit", "startWith", "detail", "includeSubData", "archived", "noteId", "ownerEmail", "parentId", "statusId", "statusName"],
      "implementation": "mcp"
    },
    "get_feature": {
      "category": "features",
      "operation": "GET_FEATURE",
      "description": "Get a specific feature by ID",
      "requiredParams": ["id"],
      "optionalParams": ["detail", "includeSubData"],
      "implementation": "mcp"
    },
    "update_feature": {
      "category": "features",
      "operation": "UPDATE_FEATURE",
      "description": "Update a feature. Supports both standard fields and custom fields - pass custom field names as additional parameters (e.g., \"T-Shirt Sizing\": \"large\").",
      "requiredParams": ["id"],
      "optionalParams": ["name", "description", "status", "owner", "archived", "timeframe", "parentId", "componentId", "productId", "...customFields"],
      "implementation": "mcp"
    },
    "delete_feature": {
      "category": "features",
      "operation": "DELETE_FEATURE",
      "description": "Delete a feature",
      "requiredParams": ["id"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "create_component": {
      "category": "features",
      "operation": "CREATE_COMPONENT",
      "description": "Create a new component in Productboard",
      "requiredParams": ["name"],
      "optionalParams": ["description", "productId"],
      "implementation": "mcp"
    },
    "get_components": {
      "category": "features",
      "operation": "GET_COMPONENTS",
      "description": "List all components in Productboard",
      "requiredParams": [],
      "optionalParams": ["limit", "startWith", "detail", "includeSubData", "productId"],
      "implementation": "mcp"
    },
    "get_component": {
      "category": "features",
      "operation": "GET_COMPONENT",
      "description": "Get a specific component by ID",
      "requiredParams": ["id"],
      "optionalParams": ["detail", "includeSubData"],
      "implementation": "mcp"
    },
    "update_component": {
      "category": "features",
      "operation": "UPDATE_COMPONENT",
      "description": "Update a component",
      "requiredParams": ["id"],
      "optionalParams": ["name", "description"],
      "implementation": "mcp"
    },
    "get_products": {
      "category": "features",
      "operation": "GET_PRODUCTS",
      "description": "List all products in Productboard",
      "requiredParams": [],
      "optionalParams": ["limit", "startWith", "detail", "includeSubData"],
      "implementation": "mcp"
    },
    "get_product": {
      "category": "features",
      "operation": "GET_PRODUCT",
      "description": "Get a specific product by ID",
      "requiredParams": ["id"],
      "optionalParams": ["detail", "includeSubData"],
      "implementation": "mcp"
    },
    "update_product": {
      "category": "features",
      "operation": "UPDATE_PRODUCT",
      "description": "Update a product",
      "requiredParams": ["id"],
      "optionalParams": ["name", "description"],
      "implementation": "mcp"
    },
    "create_company": {
      "category": "companies",
      "operation": "CREATE_COMPANY",
      "description": "Create a new company",
      "requiredParams": ["name"],
      "optionalParams": ["description", "domain", "externalId"],
      "implementation": "mcp"
    },
    "get_companies": {
      "category": "companies",
      "operation": "GET_COMPANIES",
      "description": "List all companies",
      "requiredParams": [],
      "optionalParams": ["detail", "featureId", "hasNotes", "includeSubData", "limit", "startWith", "term"],
      "implementation": "mcp"
    },
    "get_company": {
      "category": "companies",
      "operation": "GET_COMPANY",
      "description": "Retrieve a specific company",
      "requiredParams": ["id"],
      "optionalParams": ["detail", "includeSubData"],
      "implementation": "mcp"
    },
    "update_company": {
      "category": "companies",
      "operation": "UPDATE_COMPANY",
      "description": "Update a company",
      "requiredParams": ["id", "body"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "delete_company": {
      "category": "companies",
      "operation": "DELETE_COMPANY",
      "description": "Delete a company",
      "requiredParams": ["id"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "create_company_field": {
      "category": "companies",
      "operation": "CREATE_COMPANY_FIELD",
      "description": "Create a company field",
      "requiredParams": ["body"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "list_company_fields": {
      "category": "companies",
      "operation": "LIST_COMPANY_FIELDS",
      "description": "Retrieve company fields",
      "requiredParams": [],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "get_company_field": {
      "category": "companies",
      "operation": "GET_COMPANY_FIELD",
      "description": "Retrieve a company field",
      "requiredParams": ["id"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "update_company_field": {
      "category": "companies",
      "operation": "UPDATE_COMPANY_FIELD",
      "description": "Update a company field",
      "requiredParams": ["id", "body"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "delete_company_field": {
      "category": "companies",
      "operation": "DELETE_COMPANY_FIELD",
      "description": "Delete a company field",
      "requiredParams": ["id"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "get_company_field_value": {
      "category": "companies",
      "operation": "GET_COMPANY_FIELD_VALUE",
      "description": "Retrieve company field value",
      "requiredParams": ["companyId", "companyCustomFieldId"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "set_company_field_value": {
      "category": "companies",
      "operation": "SET_COMPANY_FIELD_VALUE",
      "description": "Sets company field value",
      "requiredParams": ["companyId", "companyCustomFieldId", "body"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "delete_company_field_value": {
      "category": "companies",
      "operation": "DELETE_COMPANY_FIELD_VALUE",
      "description": "Delete company field value",
      "requiredParams": ["companyId", "companyCustomFieldId"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "get_users": {
      "category": "companies",
      "operation": "GET_USERS",
      "description": "List all users in Productboard",
      "requiredParams": [],
      "optionalParams": ["detail", "includeSubData", "limit", "startWith"],
      "implementation": "mcp"
    },
    "create_user": {
      "category": "companies",
      "operation": "CREATE_USER",
      "description": "Create a new user in Productboard",
      "requiredParams": ["email"],
      "optionalParams": ["name", "role", "companyId", "externalId"],
      "implementation": "mcp"
    },
    "get_user": {
      "category": "companies",
      "operation": "GET_USER",
      "description": "Get a specific user by ID",
      "requiredParams": ["id"],
      "optionalParams": ["detail", "includeSubData"],
      "implementation": "mcp"
    },
    "update_user": {
      "category": "companies",
      "operation": "UPDATE_USER",
      "description": "Update an existing user",
      "requiredParams": ["id"],
      "optionalParams": ["name", "role", "companyId", "externalId"],
      "implementation": "mcp"
    },
    "delete_user": {
      "category": "companies",
      "operation": "DELETE_USER",
      "description": "Delete a user",
      "requiredParams": ["id"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "post_webhook": {
      "category": "webhooks",
      "operation": "POST_WEBHOOK",
      "description": "Create a new subscription",
      "requiredParams": ["body"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "get_webhooks": {
      "category": "webhooks",
      "operation": "GET_WEBHOOKS",
      "description": "List all subscriptions",
      "requiredParams": [],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "get_webhook": {
      "category": "webhooks",
      "operation": "GET_WEBHOOK",
      "description": "Get a specific webhook subscription by ID",
      "requiredParams": ["id"],
      "optionalParams": ["detail", "includeSubData"],
      "implementation": "mcp"
    },
    "delete_webhook": {
      "category": "webhooks",
      "operation": "DELETE_WEBHOOK",
      "description": "Delete a webhook subscription",
      "requiredParams": ["id"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "get_objectives": {
      "category": "objectives",
      "operation": "GET_OBJECTIVES",
      "description": "List all objectives",
      "requiredParams": [],
      "optionalParams": ["detail", "includeSubData", "limit", "startWith"],
      "implementation": "mcp"
    },
    "create_objective": {
      "category": "objectives",
      "operation": "CREATE_OBJECTIVE",
      "description": "Create a new objective",
      "requiredParams": ["name"],
      "optionalParams": ["description", "startDate", "endDate", "ownerId"],
      "implementation": "mcp"
    },
    "get_objective": {
      "category": "objectives",
      "operation": "GET_OBJECTIVE",
      "description": "Get a specific objective by ID",
      "requiredParams": ["id"],
      "optionalParams": ["detail", "includeSubData"],
      "implementation": "mcp"
    },
    "update_objective": {
      "category": "objectives",
      "operation": "UPDATE_OBJECTIVE",
      "description": "Update an existing objective",
      "requiredParams": ["id"],
      "optionalParams": ["name", "description", "startDate", "endDate", "ownerId"],
      "implementation": "mcp"
    },
    "delete_objective": {
      "category": "objectives",
      "operation": "DELETE_OBJECTIVE",
      "description": "Delete an objective",
      "requiredParams": ["id"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "list_links_objective_to_features": {
      "category": "objectives",
      "operation": "LIST_LINKS_OBJECTIVE_TO_FEATURES",
      "description": "List features linked to a specific objective",
      "requiredParams": ["id"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "list_links_objective_to_initiatives": {
      "category": "objectives",
      "operation": "LIST_LINKS_OBJECTIVE_TO_INITIATIVES",
      "description": "List initiatives linked to a specific objective",
      "requiredParams": ["id"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "create_objective_to_initiative_link": {
      "category": "objectives",
      "operation": "CREATE_OBJECTIVE_TO_INITIATIVE_LINK",
      "description": "Create a new link between an objective and an initiative",
      "requiredParams": ["id", "initiativeId"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "delete_objective_to_initiative_link": {
      "category": "objectives",
      "operation": "DELETE_OBJECTIVE_TO_INITIATIVE_LINK",
      "description": "Delete a link between an objective and an initiative",
      "requiredParams": ["id", "initiativeId"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "create_objective_to_feature_link": {
      "category": "objectives",
      "operation": "CREATE_OBJECTIVE_TO_FEATURE_LINK",
      "description": "Create a new link between an objective and a feature",
      "requiredParams": ["id", "featureId"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "delete_objective_to_feature_link": {
      "category": "objectives",
      "operation": "DELETE_OBJECTIVE_TO_FEATURE_LINK",
      "description": "Delete a link between an objective and a feature",
      "requiredParams": ["id", "featureId"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "get_initiatives": {
      "category": "objectives",
      "operation": "GET_INITIATIVES",
      "description": "List all initiatives",
      "requiredParams": [],
      "optionalParams": ["detail", "includeSubData", "limit", "startWith"],
      "implementation": "mcp"
    },
    "create_initiative": {
      "category": "objectives",
      "operation": "CREATE_INITIATIVE",
      "description": "Create a new initiative",
      "requiredParams": ["name"],
      "optionalParams": ["description", "ownerId", "status"],
      "implementation": "mcp"
    },
    "get_initiative": {
      "category": "objectives",
      "operation": "GET_INITIATIVE",
      "description": "Get a specific initiative by ID",
      "requiredParams": ["id"],
      "optionalParams": ["detail", "includeSubData"],
      "implementation": "mcp"
    },
    "update_initiative": {
      "category": "objectives",
      "operation": "UPDATE_INITIATIVE",
      "description": "Update an existing initiative",
      "requiredParams": ["id"],
      "optionalParams": ["name", "description", "ownerId", "status"],
      "implementation": "mcp"
    },
    "delete_initiative": {
      "category": "objectives",
      "operation": "DELETE_INITIATIVE",
      "description": "Delete an initiative",
      "requiredParams": ["id"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "list_links_initiative_to_objectives": {
      "category": "objectives",
      "operation": "LIST_LINKS_INITIATIVE_TO_OBJECTIVES",
      "description": "List objectives linked to a specific initiative",
      "requiredParams": ["id"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "list_links_initiative_to_features": {
      "category": "objectives",
      "operation": "LIST_LINKS_INITIATIVE_TO_FEATURES",
      "description": "List features linked to a specific initiative",
      "requiredParams": ["id"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "create_initiative_to_objective_link": {
      "category": "objectives",
      "operation": "CREATE_INITIATIVE_TO_OBJECTIVE_LINK",
      "description": "Create a new link between an initiative and an objective",
      "requiredParams": ["id", "objectiveId"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "delete_initiative_to_objective_link": {
      "category": "objectives",
      "operation": "DELETE_INITIATIVE_TO_OBJECTIVE_LINK",
      "description": "Delete a link between an initiative and an objective",
      "requiredParams": ["id", "objectiveId"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "create_initiative_to_feature_link": {
      "category": "objectives",
      "operation": "CREATE_INITIATIVE_TO_FEATURE_LINK",
      "description": "Create a new link between an initiative and a feature",
      "requiredParams": ["id", "featureId"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "delete_initiative_to_feature_link": {
      "category": "objectives",
      "operation": "DELETE_INITIATIVE_TO_FEATURE_LINK",
      "description": "Delete a link between an initiative and a feature",
      "requiredParams": ["id", "featureId"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "get_key_results": {
      "category": "objectives",
      "operation": "GET_KEY_RESULTS",
      "description": "List all key results",
      "requiredParams": [],
      "optionalParams": ["detail", "includeSubData", "limit", "startWith"],
      "implementation": "mcp"
    },
    "create_key_result": {
      "category": "objectives",
      "operation": "CREATE_KEY_RESULT",
      "description": "Create a new key result",
      "requiredParams": ["name", "objectiveId", "type", "targetValue"],
      "optionalParams": ["currentValue", "startValue"],
      "implementation": "mcp"
    },
    "get_key_result": {
      "category": "objectives",
      "operation": "GET_KEY_RESULT",
      "description": "Get a specific key result by ID",
      "requiredParams": ["id"],
      "optionalParams": ["detail", "includeSubData"],
      "implementation": "mcp"
    },
    "update_key_result": {
      "category": "objectives",
      "operation": "UPDATE_KEY_RESULT",
      "description": "Update an existing key result",
      "requiredParams": ["id"],
      "optionalParams": ["name", "targetValue", "currentValue"],
      "implementation": "mcp"
    },
    "delete_key_result": {
      "category": "objectives",
      "operation": "DELETE_KEY_RESULT",
      "description": "Delete a key result",
      "requiredParams": ["id"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "get_custom_fields": {
      "category": "custom-fields",
      "operation": "GET_CUSTOM_FIELDS",
      "description": "List all custom fields for hierarchy entities",
      "requiredParams": ["type"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "get_custom_fields_values": {
      "category": "custom-fields",
      "operation": "GET_CUSTOM_FIELDS_VALUES",
      "description": "List all custom field values",
      "requiredParams": [],
      "optionalParams": ["customField.id", "hierarchyEntity.id", "type"],
      "implementation": "mcp"
    },
    "get_custom_field": {
      "category": "custom-fields",
      "operation": "GET_CUSTOM_FIELD",
      "description": "Retrieve a specific custom field",
      "requiredParams": ["id"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "get_custom_field_value": {
      "category": "custom-fields",
      "operation": "GET_CUSTOM_FIELD_VALUE",
      "description": "Retrieve a custom field value for a hierarchy entity",
      "requiredParams": ["customField.id", "hierarchyEntity.id"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "set_custom_field_value": {
      "category": "custom-fields",
      "operation": "SET_CUSTOM_FIELD_VALUE",
      "description": "Set value of a custom field for a hierarchy entity",
      "requiredParams": ["customField.id", "hierarchyEntity.id", "body"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "delete_custom_field_value": {
      "category": "custom-fields",
      "operation": "DELETE_CUSTOM_FIELD_VALUE",
      "description": "Delete value of a custom field for a hierarchy entity",
      "requiredParams": ["customField.id", "hierarchyEntity.id"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "get_feature_statuses": {
      "category": "custom-fields",
      "operation": "GET_FEATURE_STATUSES",
      "description": "List all feature statuses",
      "requiredParams": [],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "create_release_group": {
      "category": "releases",
      "operation": "CREATE_RELEASE_GROUP",
      "description": "Create a new release group",
      "requiredParams": ["name"],
      "optionalParams": ["description", "isDefault"],
      "implementation": "mcp"
    },
    "list_release_groups": {
      "category": "releases",
      "operation": "LIST_RELEASE_GROUPS",
      "description": "List all release groups",
      "requiredParams": [],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "get_release_group": {
      "category": "releases",
      "operation": "GET_RELEASE_GROUP",
      "description": "Get a specific release group by ID",
      "requiredParams": ["id"],
      "optionalParams": ["detail", "includeSubData"],
      "implementation": "mcp"
    },
    "update_release_group": {
      "category": "releases",
      "operation": "UPDATE_RELEASE_GROUP",
      "description": "Update an existing release group",
      "requiredParams": ["id"],
      "optionalParams": ["name", "description", "isDefault"],
      "implementation": "mcp"
    },
    "delete_release_group": {
      "category": "releases",
      "operation": "DELETE_RELEASE_GROUP",
      "description": "Delete a release group",
      "requiredParams": ["id"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "create_release": {
      "category": "releases",
      "operation": "CREATE_RELEASE",
      "description": "Create a new release",
      "requiredParams": ["name", "releaseGroupId"],
      "optionalParams": ["description", "startDate", "releaseDate", "state"],
      "implementation": "mcp"
    },
    "list_releases": {
      "category": "releases",
      "operation": "LIST_RELEASES",
      "description": "List all releases",
      "requiredParams": [],
      "optionalParams": ["releaseGroup.id"],
      "implementation": "mcp"
    },
    "get_release": {
      "category": "releases",
      "operation": "GET_RELEASE",
      "description": "Get a specific release by ID",
      "requiredParams": ["id"],
      "optionalParams": ["detail", "includeSubData"],
      "implementation": "mcp"
    },
    "update_release": {
      "category": "releases",
      "operation": "UPDATE_RELEASE",
      "description": "Update an existing release",
      "requiredParams": ["id"],
      "optionalParams": ["name", "description", "startDate", "releaseDate", "state"],
      "implementation": "mcp"
    },
    "delete_release": {
      "category": "releases",
      "operation": "DELETE_RELEASE",
      "description": "Delete a release",
      "requiredParams": ["id"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "list_feature_release_assignments": {
      "category": "releases",
      "operation": "LIST_FEATURE_RELEASE_ASSIGNMENTS",
      "description": "List all feature release assignments",
      "requiredParams": [],
      "optionalParams": ["feature.id", "release.id", "release.state", "release.timeframe.endDate.from", "release.timeframe.endDate.to"],
      "implementation": "mcp"
    },
    "get_feature_release_assignment": {
      "category": "releases",
      "operation": "GET_FEATURE_RELEASE_ASSIGNMENT",
      "description": "Retrieve a feature release assignment",
      "requiredParams": ["release.id", "feature.id"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "update_feature_release_assignment": {
      "category": "releases",
      "operation": "UPDATE_FEATURE_RELEASE_ASSIGNMENT",
      "description": "Update a feature release assignment",
      "requiredParams": ["release.id", "feature.id", "body"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "post_plugin_integration": {
      "category": "plugin-integrations",
      "operation": "POST_PLUGIN_INTEGRATION",
      "description": "Create a plugin integration",
      "requiredParams": ["body"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "get_plugin_integrations": {
      "category": "plugin-integrations",
      "operation": "GET_PLUGIN_INTEGRATIONS",
      "description": "List all plugin integrations",
      "requiredParams": [],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "get_plugin_integration": {
      "category": "plugin-integrations",
      "operation": "GET_PLUGIN_INTEGRATION",
      "description": "Retrieve a plugin integration",
      "requiredParams": ["id"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "patch_plugin_integration": {
      "category": "plugin-integrations",
      "operation": "PATCH_PLUGIN_INTEGRATION",
      "description": "Update a plugin integration",
      "requiredParams": ["id", "body"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "put_plugin_integration": {
      "category": "plugin-integrations",
      "operation": "PUT_PLUGIN_INTEGRATION",
      "description": "Update a plugin integration",
      "requiredParams": ["id", "body"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "delete_plugin_integration": {
      "category": "plugin-integrations",
      "operation": "DELETE_PLUGIN_INTEGRATION",
      "description": "Delete a plugin integration",
      "requiredParams": ["id"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "get_plugin_integration_connections": {
      "category": "plugin-integrations",
      "operation": "GET_PLUGIN_INTEGRATION_CONNECTIONS",
      "description": "List all plugin integration connections",
      "requiredParams": ["id"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "get_plugin_integration_connection": {
      "category": "plugin-integrations",
      "operation": "GET_PLUGIN_INTEGRATION_CONNECTION",
      "description": "Retrieve a plugin integration connection",
      "requiredParams": ["id", "featureId"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "put_plugin_integration_connection": {
      "category": "plugin-integrations",
      "operation": "PUT_PLUGIN_INTEGRATION_CONNECTION",
      "description": "Set a plugin integration connection",
      "requiredParams": ["id", "featureId", "body"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "delete_plugin_integration_connection": {
      "category": "plugin-integrations",
      "operation": "DELETE_PLUGIN_INTEGRATION_CONNECTION",
      "description": "Delete a plugin integration connection",
      "requiredParams": ["id", "featureId"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "get_jira_integration": {
      "category": "jira-integrations",
      "operation": "GET_JIRA_INTEGRATION",
      "description": "Retrieve a Jira integration",
      "requiredParams": ["id"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "get_jira_integrations": {
      "category": "jira-integrations",
      "operation": "GET_JIRA_INTEGRATIONS",
      "description": "List all Jira integrations",
      "requiredParams": [],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "get_jira_integration_connection": {
      "category": "jira-integrations",
      "operation": "GET_JIRA_INTEGRATION_CONNECTION",
      "description": "Retrieve a Jira integration connection",
      "requiredParams": ["id", "featureId"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "get_jira_integration_connections": {
      "category": "jira-integrations",
      "operation": "GET_JIRA_INTEGRATION_CONNECTIONS",
      "description": "List all Jira integration connections",
      "requiredParams": ["id"],
      "optionalParams": ["connection.issueId", "connection.issueKey"],
      "implementation": "mcp"
    },
    "search": {
      "category": "search",
      "operation": "SEARCH",
      "description": "Universal search across all Productboard entities with flexible filtering and output control",
      "requiredParams": ["entityType"],
      "optionalParams": ["filters", "operators", "output", "limit", "startWith", "detail", "includeSubData"],
      "implementation": "mcp"
    },
    "check_entity_status": {
      "category": "performance",
      "operation": "CHECK_ENTITY_STATUS",
      "description": "Check status for multiple entities with minimal data transfer. Optimized for quick status overview of large entity sets.",
      "requiredParams": ["entityType", "ids"],
      "optionalParams": ["fields", "format", "useCache", "instance", "workspaceId"],
      "implementation": "mcp"
    },
    "validate_entity_existence": {
      "category": "performance",
      "operation": "VALIDATE_ENTITY_EXISTENCE",
      "description": "Validate existence of multiple entities efficiently. Returns missing/existing entity lists.",
      "requiredParams": ["entityType", "ids"],
      "optionalParams": ["returnMissing", "returnExisting", "useCache", "instance", "workspaceId"],
      "implementation": "mcp"
    },
    "track_batch_progress": {
      "category": "performance",
      "operation": "TRACK_BATCH_PROGRESS",
      "description": "Track progress for batch operations using custom markers (e.g., status:completed, customField).",
      "requiredParams": ["entityType", "ids", "progressMarker"],
      "optionalParams": ["includeDetails", "groupBy", "useCache", "instance", "workspaceId"],
      "implementation": "mcp"
    },
    "get_entity_counts": {
      "category": "performance",
      "operation": "GET_ENTITY_COUNTS",
      "description": "Get entity counts without fetching full data. Optimized for dashboard metrics and overview statistics.",
      "requiredParams": ["entityType"],
      "optionalParams": ["filters", "useCache", "instance", "workspaceId"],
      "implementation": "mcp"
    },
    "perform_health_check": {
      "category": "performance",
      "operation": "PERFORM_HEALTH_CHECK",
      "description": "Perform comprehensive system health check including API connectivity, cache status, and memory usage.",
      "requiredParams": [],
      "optionalParams": ["includeDetails", "includeCacheStats", "includeMemoryStats", "instance", "workspaceId"],
      "implementation": "mcp"
    },
    "get_performance_stats": {
      "category": "performance",
      "operation": "GET_PERFORMANCE_STATS",
      "description": "Get detailed performance statistics including response times, cache hit rates, and percentiles.",
      "requiredParams": [],
      "optionalParams": ["operation", "includePercentiles", "clearOldMetrics", "instance", "workspaceId"],
      "implementation": "mcp"
    },
    "perform_cleanup": {
      "category": "performance",
      "operation": "PERFORM_CLEANUP",
      "description": "Clear caches and perform system cleanup. Useful for memory management and troubleshooting.",
      "requiredParams": [],
      "optionalParams": ["clearCache", "clearMetrics", "forceGC", "instance", "workspaceId"],
      "implementation": "mcp"
    },
    "perform_bulk_update": {
      "category": "bulk-operations",
      "operation": "PERFORM_BULK_UPDATE",
      "description": "Perform batch updates with diff tracking and change analysis. Supports features, notes, companies, users, and objectives.",
      "requiredParams": ["entityType", "updates"],
      "optionalParams": ["batchSize", "concurrency", "continueOnError", "validateBeforeUpdate", "trackChanges", "diffFormat", "includeUnchanged", "instance", "workspaceId"],
      "implementation": "mcp"
    },
    "compare_entities": {
      "category": "bulk-operations",
      "operation": "COMPARE_ENTITIES",
      "description": "Compare current entity state with proposed changes without making updates. Shows what would change.",
      "requiredParams": ["entityType", "comparisons"],
      "optionalParams": ["diffFormat", "highlightSignificant", "includeUnchanged", "instance", "workspaceId"],
      "implementation": "mcp"
    },
    "validate_bulk_update": {
      "category": "bulk-operations",
      "operation": "VALIDATE_BULK_UPDATE",
      "description": "Validate bulk update request without executing. Checks for errors and potential issues.",
      "requiredParams": ["entityType", "updates"],
      "optionalParams": ["checkExistence", "validateFields", "instance", "workspaceId"],
      "implementation": "mcp"
    },
    "set_user_context": {
      "category": "context-aware",
      "operation": "SET_USER_CONTEXT",
      "description": "Set user context for intelligent response adaptation and personalization.",
      "requiredParams": ["sessionId"],
      "optionalParams": ["userPreferences", "workspaceContext", "instanceContext"],
      "implementation": "mcp"
    },
    "get_user_context": {
      "category": "context-aware",
      "operation": "GET_USER_CONTEXT",
      "description": "Retrieve current user context and preferences.",
      "requiredParams": ["sessionId"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "adapt_response": {
      "category": "context-aware",
      "operation": "ADAPT_RESPONSE",
      "description": "Adapt a response based on user context and preferences. Provides intelligent formatting and guidance.",
      "requiredParams": ["sessionId", "query", "originalResponse"],
      "optionalParams": ["includeGuidance", "includeSuggestions"],
      "implementation": "mcp"
    },
    "add_adaptation_rule": {
      "category": "context-aware",
      "operation": "ADD_ADAPTATION_RULE",
      "description": "Add custom adaptation rule for response processing. Allows personalized response handling.",
      "requiredParams": ["name", "description", "priority", "condition", "adaptation"],
      "optionalParams": ["sessionId"],
      "implementation": "mcp"
    },
    "clear_user_context": {
      "category": "context-aware",
      "operation": "CLEAR_USER_CONTEXT",
      "description": "Clear all context data for a session. Useful for privacy or starting fresh.",
      "requiredParams": ["sessionId"],
      "optionalParams": [],
      "implementation": "mcp"
    },
    "get_context_stats": {
      "category": "context-aware",
      "operation": "GET_CONTEXT_STATS",
      "description": "Get system statistics about context-aware features usage and performance.",
      "requiredParams": [],
      "optionalParams": [],
      "implementation": "mcp"
    }
  }
}