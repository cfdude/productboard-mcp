/**
 * Field mappings and searchable fields for each entity type
 */

export const EntityFieldMappings: Record<
  string,
  {
    searchableFields: string[];
    displayNames: Record<string, string>;
    summaryFields: string[];
    endpoint: string;
    listFunction: string;
    serverSideFilters?: string[];
    filterMappings?: Record<string, string>;
  }
> = {
  features: {
    searchableFields: [
      'id',
      'name',
      'description',
      'type',
      'status',
      'status.id',
      'status.name',
      'archived',
      'owner',
      'owner.email',
      'parent',
      'parent.id',
      'timeframe',
      'timeframe.startDate',
      'timeframe.endDate',
      'granularity',
      'createdAt',
      'updatedAt',
    ],
    displayNames: {
      name: 'name',
      description: 'description',
      'status.name': 'status',
      'status.id': 'status ID',
      'owner.email': 'owner email',
      'parent.id': 'parent feature ID',
      'timeframe.startDate': 'start date',
      'timeframe.endDate': 'end date',
      archived: 'archived status',
      type: 'feature type',
    },
    summaryFields: ['id', 'name', 'status.name', 'owner.email'],
    endpoint: '/features',
    listFunction: 'get_features',
    serverSideFilters: [
      'archived',
      'status.id',
      'status.name',
      'owner.email',
      'parent.id',
    ],
    filterMappings: {
      'status.id': 'statusId',
      'status.name': 'statusName',
      'owner.email': 'ownerEmail',
      'parent.id': 'parentId',
    },
  },

  notes: {
    searchableFields: [
      'id',
      'title',
      'content',
      'displayUrl',
      'user',
      'user.email',
      'user.name',
      'company',
      'company.domain',
      'company.name',
      'tags',
      'source',
      'sourceOrigin',
      'sourceRecordId',
      'owner',
      'owner.email',
      'createdAt',
      'updatedAt',
    ],
    displayNames: {
      title: 'title',
      content: 'content',
      'user.email': 'user email',
      'user.name': 'user name',
      'company.domain': 'company domain',
      'company.name': 'company name',
      tags: 'tags',
      sourceOrigin: 'source',
      'owner.email': 'owner email',
    },
    summaryFields: ['id', 'title', 'user.name', 'company.domain'],
    endpoint: '/notes',
    listFunction: 'get_notes',
    serverSideFilters: ['owner.email', 'company.domain', 'tags'],
    filterMappings: {
      'owner.email': 'ownerEmail',
      'company.domain': 'companyDomain',
      tags: 'allTags',
    },
  },

  companies: {
    searchableFields: [
      'id',
      'name',
      'domain',
      'description',
      'sourceOrigin',
      'sourceRecordId',
      'createdAt',
      'updatedAt',
    ],
    displayNames: {
      name: 'company name',
      domain: 'domain',
      description: 'description',
      sourceOrigin: 'source origin',
    },
    summaryFields: ['id', 'name', 'domain'],
    endpoint: '/companies',
    listFunction: 'get_companies',
    serverSideFilters: ['name', 'domain'],
    filterMappings: {},
  },

  users: {
    searchableFields: [
      'id',
      'email',
      'name',
      'role',
      'active',
      'createdAt',
      'updatedAt',
    ],
    displayNames: {
      email: 'email',
      name: 'name',
      role: 'role',
      active: 'active status',
    },
    summaryFields: ['id', 'name', 'email', 'role'],
    endpoint: '/users',
    listFunction: 'get_users',
    serverSideFilters: ['active'],
    filterMappings: {},
  },

  products: {
    searchableFields: ['id', 'name', 'description', 'createdAt', 'updatedAt'],
    displayNames: {
      name: 'product name',
      description: 'description',
    },
    summaryFields: ['id', 'name'],
    endpoint: '/products',
    listFunction: 'get_products',
    serverSideFilters: [],
    filterMappings: {},
  },

  components: {
    searchableFields: [
      'id',
      'name',
      'description',
      'product',
      'product.id',
      'owner',
      'owner.email',
      'createdAt',
      'updatedAt',
    ],
    displayNames: {
      name: 'component name',
      description: 'description',
      'product.id': 'product ID',
      'owner.email': 'owner email',
    },
    summaryFields: ['id', 'name', 'product.name'],
    endpoint: '/components',
    listFunction: 'get_components',
    serverSideFilters: ['product.id'],
    filterMappings: {
      'product.id': 'productId',
    },
  },

  releases: {
    searchableFields: [
      'id',
      'name',
      'state',
      'description',
      'releaseGroup',
      'releaseGroup.id',
      'timeframe',
      'timeframe.startDate',
      'timeframe.endDate',
      'createdAt',
      'updatedAt',
    ],
    displayNames: {
      name: 'release name',
      state: 'state',
      description: 'description',
      'releaseGroup.id': 'release group',
      'timeframe.startDate': 'start date',
      'timeframe.endDate': 'end date',
    },
    summaryFields: ['id', 'name', 'state'],
    endpoint: '/releases',
    listFunction: 'list_releases',
    serverSideFilters: ['releaseGroup.id'],
    filterMappings: {
      'releaseGroup.id': 'releaseGroup.id',
    },
  },

  release_groups: {
    searchableFields: [
      'id',
      'name',
      'description',
      'isDefault',
      'createdAt',
      'updatedAt',
    ],
    displayNames: {
      name: 'release group name',
      description: 'description',
      isDefault: 'is default',
    },
    summaryFields: ['id', 'name', 'isDefault'],
    endpoint: '/release-groups',
    listFunction: 'list_release_groups',
    serverSideFilters: [],
    filterMappings: {},
  },

  objectives: {
    searchableFields: [
      'id',
      'name',
      'description',
      'owner',
      'owner.email',
      'timeframe',
      'timeframe.startDate',
      'timeframe.endDate',
      'createdAt',
      'updatedAt',
    ],
    displayNames: {
      name: 'objective name',
      description: 'description',
      'owner.email': 'owner email',
      'timeframe.startDate': 'start date',
      'timeframe.endDate': 'end date',
    },
    summaryFields: ['id', 'name', 'owner.email'],
    endpoint: '/objectives',
    listFunction: 'get_objectives',
    serverSideFilters: [],
    filterMappings: {},
  },

  initiatives: {
    searchableFields: [
      'id',
      'name',
      'description',
      'status',
      'status.name',
      'owner',
      'owner.email',
      'createdAt',
      'updatedAt',
    ],
    displayNames: {
      name: 'initiative name',
      description: 'description',
      'status.name': 'status',
      'owner.email': 'owner email',
    },
    summaryFields: ['id', 'name', 'status.name'],
    endpoint: '/initiatives',
    listFunction: 'get_initiatives',
    serverSideFilters: [],
    filterMappings: {},
  },

  key_results: {
    searchableFields: [
      'id',
      'name',
      'type',
      'objective',
      'objective.id',
      'startValue',
      'currentValue',
      'targetValue',
      'createdAt',
      'updatedAt',
    ],
    displayNames: {
      name: 'key result name',
      type: 'type',
      'objective.id': 'objective',
      currentValue: 'current value',
      targetValue: 'target value',
    },
    summaryFields: ['id', 'name', 'currentValue', 'targetValue'],
    endpoint: '/key-results',
    listFunction: 'get_key_results',
    serverSideFilters: [],
    filterMappings: {},
  },

  custom_fields: {
    searchableFields: [
      'id',
      'name',
      'type',
      'entityType',
      'required',
      'description',
      'createdAt',
      'updatedAt',
    ],
    displayNames: {
      name: 'field name',
      type: 'field type',
      entityType: 'entity type',
      required: 'required status',
    },
    summaryFields: ['id', 'name', 'type', 'entityType'],
    endpoint: '/custom-fields',
    listFunction: 'get_custom_fields',
    serverSideFilters: ['type'],
    filterMappings: {},
  },

  webhooks: {
    searchableFields: [
      'id',
      'eventType',
      'url',
      'active',
      'sec' + 'ret',
      'createdAt',
      'updatedAt',
    ],
    displayNames: {
      eventType: 'event type',
      url: 'webhook URL',
      active: 'active status',
      ['sec' + 'ret']: 'webhook verification token',
    },
    summaryFields: ['id', 'eventType', 'url', 'active'],
    endpoint: '/webhooks',
    listFunction: 'list_webhooks',
    serverSideFilters: [],
    filterMappings: {},
  },

  plugin_integrations: {
    searchableFields: [
      'id',
      'name',
      'type',
      'config',
      'active',
      'createdAt',
      'updatedAt',
    ],
    displayNames: {
      name: 'integration name',
      type: 'integration type',
      active: 'active status',
    },
    summaryFields: ['id', 'name', 'type', 'active'],
    endpoint: '/plugin-integrations',
    listFunction: 'get_plugin_integrations',
    serverSideFilters: [],
    filterMappings: {},
  },

  jira_integrations: {
    searchableFields: [
      'id',
      'name',
      'url',
      'active',
      'projectKey',
      'createdAt',
      'updatedAt',
    ],
    displayNames: {
      name: 'integration name',
      url: 'Jira URL',
      active: 'active status',
      projectKey: 'project key',
    },
    summaryFields: ['id', 'name', 'url', 'active'],
    endpoint: '/jira-integrations',
    listFunction: 'get_jira_integrations',
    serverSideFilters: [],
    filterMappings: {},
  },
};
